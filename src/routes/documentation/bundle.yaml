openapi: 3.1.0
info:
  version: 1.0.0
  title: Control Panel - Bizyhive suit
  x-logo:
    url: https://adorithm.com/assets/apps/bizyhive/ecommerce-control-panel/logo.png
  description: |
    Control Panel (part of Bizyhive suit) API is a RESTful interface that exposes a collection of resources associated with a Control Panel's account and even more.

    **Available resources**
    - **Authentication**: This resource provides various methods for creating and managing various methods for authenticating and managing a user's accounts.
    - **Company data**: This resource provides various methods for managing the data of an application-contracted company.
    - **Email integrations**: This resource provides various methods for the creation and harmonious management of emails connected to the company's application (via SMTP).
    - **Company's warehouses**: This resource provides methods for the creation and management of a set of warehouses belonging to the company and storing its products, in order to properly regulate the allocation and distribution of its products.
    - **Connected users**: This resource provides all the methods given for managing the users connected to the company, managing the rights to use the application as well as their information on the part of the administrators.
    - **Profile system**: This resource provides all the methods given for managing the user's profile data
    - **Contacts system**: This resource provides all methods given for creating and managing contacts and all associated items.
    - **Dashboard stats**: This resource provides all methods for getting and accessing statistics displayed in the application dashboard.
    - **Employees system**: This resource provides all the methods for creating and managing the tabs of the company's employees and workers. The tab provides personal data as well as data related to the work environment, such as working hours.
    - **Famous products**: This resource provides methods for accessing popular products in general or by category.
    - **Orders system**: This resource provides methods for creating, accessing and optimally managing orders for each company.
    - **Products system**: This resource provides methods for creating and fully managing the products that each company markets and manages.
    - **Products inventories**: This resource provides methods to manage the product inventories and them settings
    - **Total sales amount**: This resource provides methods for accessing sales statistics.
    - **Newsletter system**: System for managing, creating and sending emails (newsletter) to the company's customers.
    - **Utilities**: General utilities and more for the app

    **Servers**
    - https://localhost:8080
    - https://control-panel.bizyhive.com
servers:
  - url: https://localhost:8080
  - url: https://control-panel.bizyhive.com
tags:
  - name: Authentication
    description: API EndPoints for Authentication.
  - name: Company data
    description: API EndPoints for Company data.
  - name: Email integrations
    description: API EndPoints for Email integrations.
  - name: Company's warehouses
    description: API EndPoints for Company's warehouses
  - name: Connected users
    description: API EndPoints for Connected users
  - name: Profile system
    description: API EndPoints to manage the user's profile
  - name: Contacts system
    description: API EndPoints for Contacts system
  - name: Dashboard stats
    description: API EndPoints for Dashboard stats
  - name: Employees system
    description: API EndPoints for Employees system
  - name: Famous products
    description: API EndPoints for Famous products
  - name: Orders system
    description: API EndPoints for Orders system
  - name: Products system
    description: API EndPoints for Products system
  - name: Products inventories
    description: API EndPoints for Products inventories
  - name: Total sales amount
    description: API EndPoints for Total sales amount
  - name: Newsletter system
    description: API EndPoints for Newsletter system
  - name: Utilities
    description: General utilities and jobs
paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: |
        Checks for successful payment of the user's login details, if the account exists and has been activated.
        If the login process is successfully completed, an object is returned with the user's details and the account of the company to which the user belongs.
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK - if the user has **disabled** the 2FA system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login-200'
        '201':
          description: OK - if the user has **enabled** the 2FA system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login-201'
        '400':
          description: Login credentials are missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: Login credentials are missing
        '403':
          description: Your email is not activated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Your email is not activated
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found_username_or_email_wrong
                  example:
                    type: string
                    example: User not found
        '493':
          description: Wrong password
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 493
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Wrong password
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: User register
      description: |
        The successful payment of the user's items and data is checked and an account is created (account level).
      operationId: accountRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_account_created_successfully
                  activation_key:
                    type: string
                    example: 123456789123456780
                  new_user_id:
                    type: string
                    example: acc_jasfjkbafhjabjhabjshdbahsdb
                  username:
                    type: string
                  email:
                    type: string
                  message:
                    type: string
                    example: Account / User created successfully
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: '"Credentials to register the user are missing" | "The connected account credentials are missing" | "Company name is missing"'
        '401':
          description: username_exists, email_exists, phone_exists, invalid_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                  message:
                    type: string
        '402':
          description: password_out_of_range, password_not_strength
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 402
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/email-activation:
    get:
      tags:
        - Authentication
      summary: User account activation
      description: |
        It checks if the account has been activated and if it has not been activated, it activates it.
      operationId: accountActivation
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: The JWT key that used to decoded and get the user's data to activate the user's account
      responses:
        '200':
          description: OK - Account activated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: successful_account_activation
                  message:
                    type: string
                    example: User account activated successfully!
                  user_id:
                    type: string
        '201':
          description: OK - Account already activated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: already_activated
                  message:
                    type: string
                    example: This account (account email) has been already activated
        '400':
          description: Parameters are missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: Activation parameters are missing!
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: The key isn't an activation token
        '419':
          description: Activation key has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 419
                  type:
                    type: string
                    example: activation_key_expired
                  message:
                    type: string
                    example: Activation key has expired
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/request-new-password:
    post:
      tags:
        - Authentication
      summary: Request new password
      description: |
        A request for password change is created and the corresponding email is sent with the instructions and the link to change the password.
      operationId: requestNewPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username/email
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: generate_token_successful
                  user_id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  account_type:
                    type: string
                    example: '"account" | "user"'
                  token:
                    type: string
                    example: JWT
                  message:
                    type: string
                    example: Token to change the password created successfully
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: Credentials to generate the token are missing
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/check-password-change-token:
    get:
      tags:
        - Authentication
      summary: Check password change token
      description: |
        Checking the validity of the JWT key to change the password of an account.
      operationId: checkPasswordChangeToken
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: The JWT key that used to decoded and get the user's data to activate the user's account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: successful_key_validation
                  valid:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successful key validation. You can change your password now
                  key:
                    type: string
                    example: JWT
                  id:
                    type: string
                    example: user_id
                  account_type:
                    type: string
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: Required parameters are missing
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: User doesn't exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/change-password:
    put:
      tags:
        - Authentication
      summary: Change password
      description: |
        The user's password is changed if all the information provided is correct.
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: user_id
                password:
                  type: string
                confirm_password:
                  type: string
                account_type:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: password_changed
                  message:
                    type: string
                    example: Password successfully changed
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    message: bad_request
                  message:
                    type: string
                    message: Required parameters are missing
        '406':
          description: password_not_same
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 406
                  type:
                    type: string
                    example: password_not_same
                  message:
                    type: string
                    example: Passsword and Confirm password are not the same
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: |
        Disconnects the user from the system.
      operationId: userLogout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 200 OK
                  message:
                    type: string
                    example: Logout OK
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/auth/change-password-directly:
    put:
      tags:
        - Authentication
      summary: Change password directly
      description: |
        Changing the password through the dashboard from the side of the administrator of the system of the company using it.
      operationId: changePasswordDirectly
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: password_updated
                  message:
                    type: string
                    example: Password updated successfully!
        '400':
          description: missing_form_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_form_data
                  message:
                    type: string
                    example: Missing form data (new password is missing)
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 403
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Wrong old password
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/authentication/account/security/2fa/email/authentication-code/send-email:
    put:
      tags:
        - Authentication
      summary: 2FA Send Email
      description: |
        An email is sent with the one-time password that will be used for two-step authentication for a user.
      operationId: authentication2faSendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login-200'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: waiting_for_authentication
                  message:
                    type: string
                    example: Waiting for authentication
                  emailId:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/account/security/2fa/email/activate:
    put:
      tags:
        - Authentication
      summary: 2FA Email Activation
      description: |
        The two-step verification mechanism by email is activated.
      operationId: authentication2faEmailActivation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 6 digit code
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: authentication_2fa__email_activated
                  message:
                    type: string
                    example: Email 2FA authentication service activated
        '400':
          description: connection_adopted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: connection_adopted
                  message:
                    type: string
                    example: No credentials found to proceed the execute
        '404':
          description: request_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: request_not_found
                  message:
                    type: string
                    example: No code to be authenticated found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/account/security/2fa/email/de-activate:
    put:
      tags:
        - Authentication
      summary: 2FA Email De-Activation
      description: |
        The two-step verification mechanism by email is de-activated.
      operationId: authentication2faEmailDeActivation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 6 digit code
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: authentication_2fa__email_activated
                  message:
                    type: string
                    example: Email 2FA authentication service activated
        '400':
          description: connection_adopted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: connection_adopted
                  message:
                    type: string
                    example: No credentials found to proceed the execute
        '403':
          description: no_connection_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: no_connection_found
                  message:
                    type: string
                    example: The 2FA service via Email is not enabled
        '404':
          description: request_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: request_not_found
                  message:
                    type: string
                    example: No code to be authenticated found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/authentication/account/security/2fa/email/authentication-code/check:
    put:
      tags:
        - Authentication
      summary: 2FA Check 6 digit code
      description: |
        The validity of the six-digit code is checked before access is granted.
      operationId: authentication2faCheckEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: number
                  example: 200
                session_data:
                  type: object
                  example: {}
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/login-200'
                  is_valid:
                    type: boolean
                    example: true
        '400':
          description: connection_adopted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: connection_adopted
                  message:
                    type: string
                    example: No credentials found to proceed the execute
        '401':
          description: no_session_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: no_session_found
                  message:
                    type: string
                    example: Session data doesn't found
        '404':
          description: request_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: request_not_found
                  message:
                    type: string
                    example: No code to be authenticated found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/authentication/account/security/2fa/app/authentication-code/key:
    get:
      tags:
        - Authentication
      summary: 2FA get app's secret
      description: |
        The interface data with the disposable code generator application is returned.
      operationId: authentication2faAppSecret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  otpauth_url:
                    type: string
                  code:
                    type: string
                    example: code base32 encoded
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/accouns/security/2fa/app/enable:
    put:
      tags:
        - Authentication
      summary: 2FA App Activation
      description: |
        The two-step verification mechanism by app is activated.
      operationId: authentication2faAppActivation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: secret key base32 encoded
                code:
                  type: string
                  example: 6 digit code
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: connection_succeeded
                  message:
                    type: string
                    example: Connection with authenticator app created successfully
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Missing credentials
        '403':
          description: token_validation_failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: token_validation_failed
                  message:
                    type: string
                    example: The token cannot be verified
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/account/security/2fa/app/disable:
    put:
      tags:
        - Authentication
      summary: 2FA App De-Activation
      description: |
        The two-step verification mechanism by app is de-activated.
      operationId: authentication2faAppDeActivation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: service_disabled
                  message:
                    type: string
                    example: 2FA via Authenticator App service disabled successfully
        '400':
          description: token_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: token_not_found
                  message:
                    type: string
                    example: Token to validate not found
        '402':
          description: no_connection_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 402
                  type:
                    type: string
                    example: no_connection_found
                  message:
                    type: string
                    example: The 2FA service via Authenticator app is not enabled
        '403':
          description: token_invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: token_invalid
                  message:
                    type: string
                    example: 6-digit code is not valid
        '404':
          description: no_secret_key_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: no_secret_key_found
                  message:
                    type: string
                    example: Secret key to validate this action cannot be found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/authentication/account/security/2fa/app/authentication-code/verify:
    put:
      tags:
        - Authentication
      summary: 2FA App code verification
      description: |
        Used to check and confirm the six-digit code generated in the authenticator app.
      operationId: authentication2faAppCodeVerification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 6 digit code
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login-200'
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Missing credentials
        '403':
          description: token_not_match
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: token_not_match
                  message:
                    type: string
                    example: Tokens aren't match
        '404':
          description: no_token_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: no_token_found
                  message:
                    type: string
                    example: No token submitted with form
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/get:
    get:
      tags:
        - Company data
      summary: Get Company's data
      description: |
        Returns the object that contains the company data associated with the account in question.
      operationId: getCompanyData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/company-data'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/save-logo:
    post:
      tags:
        - Company data
      summary: Save company's logo
      description: |
        Saves the company's logo
      operationId: saveCompanyLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_logo:
                  type: string (binary)
        description: Send here using the 'company_logo' prefix the company's logo
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: logo_saved
                  message:
                    type: string
                    example: Company's logo saved successfully
                  originalName:
                    type: string
                    example: company-logo.png
                  mimetype:
                    type: string
                    example: png
                  destination:
                    type: string
                    example: https://...
                  filename:
                    type: string
                    example: company-logo-renamed.png
                  file_url:
                    type: string
                    example: https://.../company-logo-renamed.png
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/add-new-rec:
    post:
      tags:
        - Company data
      summary: Save new company data
      description: |
        Saves the company's data if we not have any previous records for the specific company
      operationId: saveCompanyData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company-data'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: company_data_saved
                  message:
                    type: string
                    example: Company data saved successfully!
                  rec_id:
                    type: string
                    example: new_rec_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to be added
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/update/{rec_id}:
    put:
      tags:
        - Company data
      summary: Update company data
      description: |
        Updates the details of a company when the registration already exists
      operationId: updateCompanyData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company-data'
        description: requestBody description
        required: true
      parameters:
        - name: rec_id
          in: path
          description: The record's id (record that includes the company's data)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: company_data_updated
                  message:
                    type: string
                    example: Company's data updated
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data and cannot be updated
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/slug/check-exists:
    get:
      tags:
        - Company data
      summary: Check slug exists
      description: |
        Checks if the specific slug a company wants to use exists.
      operationId: checkCompanySlugExists
      parameters:
        - name: new_slug
          in: query
          description: Slug value
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    example: true
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/account/settings/company-emails:
    get:
      tags:
        - Email integrations
      summary: Get emails
      description: |
        Returns the list of emails that the company has connected to the application.
      operationId: getEmailIntegrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email-integration'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/account/settings/company-emails/new:
    post:
      tags:
        - Email integrations
      summary: New email
      description: |
        Create and save a new email.
      operationId: addNewEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email-integration'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: email_inserted
                  message:
                    type: string
                    example: New email inserted successfully
                  email_id:
                    type: string
                    example: new_email_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to insert new email
        '403':
          description: invalid_email_data
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: invalid_email_data
                  message:
                    type: string
                    example: Email validation failed! Please try again with other credentials
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/account/settings/company-emails/{email_id}:
    put:
      tags:
        - Email integrations
      summary: Update email
      description: |
        Update an email that is already exist.
      operationId: updateEmail
      parameters:
        - name: email_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email-integration'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: email_updated
                  message:
                    type: string
                    example: Email successfully updated
        '400':
          description: nothing_to_update
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: nothing_to_update
                  message:
                    type: string
                    example: Nothing to update
        '403':
          description: invalid_email_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: invalid_email_data
                  message:
                    type: string
                    example: Email validation failed! Please try again with other credentials
        '404':
          description: email_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: email_not_found
                  message:
                    type: string
                    example: Email you are looking for, not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    get:
      tags:
        - Email integrations
      summary: Get email
      description: |
        Get an email that is already exist.
      operationId: getEmail
      parameters:
        - name: email_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email-integration'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Email integrations
      summary: Delete email
      description: |
        Delete an email that is already exist.
      operationId: deleteEmail
      parameters:
        - name: email_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: email_deleted
                  message:
                    type: string
                    example: Email deleted successfully
        '404':
          description: email_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: email_not_found
                  message:
                    type: string
                    example: Email you are looking for, not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/account/settings/company-emails/test/test-email:
    post:
      tags:
        - Email integrations
      summary: Test email connection
      description: |
        Test if the email's data are correct.
      operationId: testEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email-integration'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: email_verified
                  message:
                    type: string
                    example: Email connection verified successfully
        '400':
          description: invalid_email_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: invalid_email_data
                  message:
                    type: string
                    example: Email validation failed! Please try again with other credentials
        '403':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to insert new email
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/warehouses:
    get:
      tags:
        - Company's warehouses
      summary: Get warehouses
      description: |
        The list with the detailed information for all warehouses of a company is returned.
      operationId: getWarehouses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/warehouses'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/warehouses/{warehouse_id}:
    get:
      tags:
        - Company's warehouses
      summary: Get warehouse
      description: |
        Get a specific warehouses identified by the warehouse id
      operationId: getWarehouse
      parameters:
        - name: warehouse_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warehouses'
        '404':
          description: warehouse_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: warehouse_not_found
                  message:
                    type: string
                    example: Warehouse doesn't found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Company's warehouses
      summary: Update warehouse
      description: |
        Update a specific warehouses identified by the warehouse id
      operationId: updateWarehouse
      parameters:
        - name: warehouse_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/warehouses'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: warehouse_data_updated
                  message:
                    type: string
                    example: Warehouse data updated successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to be updated
        '404':
          description: warehouse_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: warehouse_not_found
                  message:
                    type: string
                    example: Warehouse doesn't found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Company's warehouses
      summary: Delete warehouse
      description: |
        Delete a specific warehouses identified by the warehouse id
      operationId: deleteWarehouse
      parameters:
        - name: warehouse_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: warehouse_deleted
                  message:
                    type: string
                    example: Warehouse deleted successfully
        '404':
          description: warehouse_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: warehouse_not_found
                  message:
                    type: string
                    example: Warehouse doesn't found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/company-data/warehouses/w/add:
    post:
      tags:
        - Company's warehouses
      summary: New warehouse
      description: |
        Create a new warehouse
      operationId: newWarehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/warehouses'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: warehouse_saved
                  message:
                    type: string
                    example: Warehouse saved successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to be updated
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/list:
    get:
      tags:
        - Connected users
      summary: Get users
      description: |
        Gte the general list of connected users for a company account
      operationId: getUsersList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/login-200'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/user/(user_id):
    get:
      tags:
        - Connected users
      summary: Get user
      description: |
        Get a specific user of connected users for a company account
      operationId: getSpecificUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login-200'
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User didn't found or isn't connected with current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Connected users
      summary: Update user
      description: |
        Update a specific user of connected users for a company account
      operationId: updateSpecificUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login-200'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_updated
                  message:
                    type: string
                    example: User data updated successfully
        '400':
          description: data_missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: data_missing
                  message:
                    type: string
                    example: Data missing and cannot be updated
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User didn't found or isn't connected with current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Connected users
      summary: Delete user
      description: |
        Delete a specific user of connected users for a company account
      operationId: deleteSpecificUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_deleted
                  message:
                    type: string
                    example: User deleted successfully
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User didn't found or isn't connected with current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/user/u/new:
    post:
      tags:
        - Connected users
      summary: New user
      description: |
        Create a user account
      operationId: newConnectedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_account_created_successfully
                  activation_key:
                    type: string
                    example: 123456789123456780
                  new_user_id:
                    type: string
                    example: acc_jasfjkbafhjabjhabjshdbahsdb
                  username:
                    type: string
                  email:
                    type: string
                  message:
                    type: string
                    example: Account / User created successfully
        '400':
          description: bad_request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: '"Credentials to register the user are missing" | "The connected account credentials are missing" | "Company name is missing"'
        '401':
          description: username_exists, email_exists, phone_exists, invalid_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                  message:
                    type: string
        '402':
          description: password_out_of_range, password_not_strength
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 402
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/user/{user_id}/privileges:
    put:
      tags:
        - Connected users
      summary: Modify privileges
      description: |
        Modify the permissions of a user's application.
      operationId: modifyPrivileges
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_privileges:
                  type: object
                  properties:
                    rec_id:
                      type: number
                    privilege_type:
                      type: string
                    value:
                      type: boolean
                    user_id:
                      type: string
                    connected_account_id:
                      type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_privileges_updated
                  message:
                    type: string
                    example: User privileges updated successfully
        '400':
          description: data_missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: data_missing
                  message:
                    type: string
                    example: Data missing and cannot be updated
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User didn't found or isn't connected with current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/user/{user_id}/password/change:
    put:
      tags:
        - Connected users
      summary: Admin change password
      description: |
        Changing a user's password from the application interface by the company administrator.
      operationId: adminChangePasswordUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                confirm_password:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: password_updated
                  message:
                    type: string
                    example: User's password updated successfully
        '201':
          description: OK - nothing to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: nothing_to_update
                  message:
                    type: string
                    example: Nothing to update
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Passwords do not match
        '404':
          description: user_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User didn't found or isn't connected with current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/primary-account:
    get:
      tags:
        - Connected users
      summary: Get primary account
      description: |
        Get primary (company's) account
      operationId: getPrimaryAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  phone:
                    type: string
                  profile_picture_url:
                    type: string
                  created_at:
                    type: string | Date
                  role:
                    type: string
                  is_account:
                    type: boolean
                  using_bizyhive_cloud:
                    type: boolean
                  account_type:
                    type: '"account" | "user"'
                  authentication_2fa__app:
                    type: boolean
                  authentication_2fa__email:
                    type: boolean
                  authentication_2fa__app_secret:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/connected-users/resend-verification-email:
    get:
      tags:
        - Connected users
      summary: Resend verification email
      description: |
        Resending the email message to verify and activate a new logged in user.
      operationId: resendVerificationEmail
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: email_sent
                  message:
                    type: string
                    example: Activation email sent successfully
                  emailId:
                    type: string
                    example: email_id
        '300':
          description: account_is_active
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 300
                  type:
                    type: string
                    example: account_is_active
                  message:
                    type: string
                    example: Account has already been activated
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data and cannot locate the user
        '404':
          description: user_not_exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: user_not_exist
                  message:
                    type: string
                    example: There is not a user with these credentials
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/list:
    get:
      tags:
        - Contacts system
      summary: Get list
      description: |
        Get the general lists associated with an account
      operationId: generalContactsList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/specific-list:
    get:
      tags:
        - Contacts system
      summary: Get specific list
      description: |
        Get the specific (based on query parameters) lists associated with an account
      operationId: specificContactsList
      parameters:
        - name: contact_id
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: father_name
          in: query
          required: false
          schema:
            type: string
        - name: surname
          in: query
          required: false
          schema:
            type: string
        - name: mother_name
          in: query
          required: false
          schema:
            type: string
        - name: alias
          in: query
          required: false
          schema:
            type: string
        - name: company
          in: query
          required: false
          schema:
            type: string
        - name: work_position_title
          in: query
          required: false
          schema:
            type: string
        - name: contact_label_id
          in: query
          required: false
          schema:
            type: string
        - name: contact_label_str
          in: query
          required: false
          schema:
            type: string
        - name: phone_number
          in: query
          required: false
          schema:
            type: string
        - name: contact_email
          in: query
          required: false
          schema:
            type: string
        - name: private
          in: query
          required: false
          schema:
            type: boolean
        - name: private_user_id
          in: query
          required: false
          schema:
            type: string
        - name: favorite
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}:
    get:
      tags:
        - Contacts system
      summary: Get contact
      description: |
        Get a specific contact
      operationId: getSpecificContact
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Contacts system
      summary: Update contact
      description: |
        Update a specific contact
      operationId: updateSpecificContact
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  properties:
                    type: object
                    title: contact_schema
                    properties:
                      contact_id:
                        type: string
                      connected_account_id:
                        type: string
                      image_url:
                        type: string
                      prefix:
                        type: string
                      name:
                        type: string
                      father_name:
                        type: string
                      surname:
                        type: string
                      suffix:
                        type: string
                      mother_name:
                        type: string
                      name_in_speaking_format:
                        type: string
                      father_name_in_speaking_format:
                        type: string
                      alias:
                        type: string
                      archive_as:
                        type: string
                      company:
                        type: string
                      work_position_title:
                        type: string
                      work_department:
                        type: string
                      date_of_birth:
                        type: string | Date
                      website:
                        type: string
                      notes:
                        type: string
                      private:
                        type: boolean
                      private_user_id:
                        type: string
                      favorite:
                        type: boolean
                      contact_labels:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-labels-schema'
                      addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-addresses-schema'
                      custom_fields:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-custom-fields-schema'
                      emails:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-emails-schema'
                      phones:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-phones-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_updated
                  message:
                    type: string
                    example: Contact update successfully!
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact to be updated not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Contacts system
      summary: Delete contact
      description: |
        Delete a specific contact
      operationId: deleteSpecificContact
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_delete
                  message:
                    type: string
                    example: Contact deleted successfully
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact to be updated not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/n/new:
    post:
      tags:
        - Contacts system
      summary: New contact
      description: |
        New a specific contact
      operationId: newSpecificContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  properties:
                    type: object
                    title: contact_schema
                    properties:
                      contact_id:
                        type: string
                      connected_account_id:
                        type: string
                      image_url:
                        type: string
                      prefix:
                        type: string
                      name:
                        type: string
                      father_name:
                        type: string
                      surname:
                        type: string
                      suffix:
                        type: string
                      mother_name:
                        type: string
                      name_in_speaking_format:
                        type: string
                      father_name_in_speaking_format:
                        type: string
                      alias:
                        type: string
                      archive_as:
                        type: string
                      company:
                        type: string
                      work_position_title:
                        type: string
                      work_department:
                        type: string
                      date_of_birth:
                        type: string | Date
                      website:
                        type: string
                      notes:
                        type: string
                      private:
                        type: boolean
                      private_user_id:
                        type: string
                      favorite:
                        type: boolean
                      contact_labels:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-labels-schema'
                      addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-addresses-schema'
                      custom_fields:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-custom-fields-schema'
                      emails:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-emails-schema'
                      phones:
                        type: array
                        items:
                          $ref: '#/components/schemas/contact-phones-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_added
                  message:
                    type: string
                    example: New contact added successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: missing data (name)
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}/p/photo-manage:
    post:
      tags:
        - Contacts system
      summary: Save contact's photo
      description: |
        Saves the contact's photo
      operationId: saveContactPhoto
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_logo:
                  type: string (binary)
        description: Send here using the 'contact_photo' prefix the contact's photo
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_info_inserted_updated
                  message:
                    type: string
                    example: contact_info_inserted_updated
                  originalName:
                    type: string
                    example: contact-photo.png
                  mimetype:
                    type: string
                    example: png
                  destination:
                    type: string
                    example: https://...
                  filename:
                    type: string
                    example: contact-photo-renamed.png
                  file_url:
                    type: string
                    example: https://.../contact-photo-renamed.png
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}/p/favorite:
    put:
      tags:
        - Contacts system
      summary: Toggle favorite
      description: |
        Changes the status of the favorite property for a contact.
      operationId: toggleContactFavorite
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                favorite:
                  type: boolean
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: toggle_favorite
                  message:
                    type: string
                    example: Favorite status changed successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}/labels/list:
    get:
      tags:
        - Contacts system
      summary: Get labels list
      description: |
        Returns the list of available labels we can give to a contact.
      operationId: getContactLabelsList
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact-labels-schema'
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact id doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}/labels/{label_id}:
    get:
      tags:
        - Contacts system
      summary: Get specific label
      description: |
        Returns the specific label of available labels we can give to a contact.
      operationId: getSpecificLabel
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact-labels-schema'
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact id doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Contacts system
      summary: Update specific label
      description: |
        Update the specific label of available labels we can give to a contact.
      operationId: updateSpecificLabel
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact-labels-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_label_updated
                  message:
                    type: string
                    example: Contact label successfully updated!
        '400':
          description: missing_credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_credentials
                  message:
                    type: string
                    example: Can not update the label! Missing data!
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact not found!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Contacts system
      summary: Delete specific label
      description: |
        Delete the specific label of available labels we can give to a contact.
      operationId: deleteSpecificLabel
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: label_deleted
                  message:
                    type: string
                    example: Label removed successfully from the contact
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact not found!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/{contact_id}/labels/new:
    post:
      tags:
        - Contacts system
      summary: New contact label
      description: |
        Add a specific label of available labels we can give to a contact.
      operationId: addNewSpecific label
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact-labels-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: contact_label_added
                  message:
                    type: string
                    example: Contact label added successfully to the contact with id {contact_id}
        '404':
          description: contact_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: contact_not_found
                  message:
                    type: string
                    example: Contact not found!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/labels/names/list:
    get:
      tags:
        - Contacts system
      summary: Get label names list
      description: |
        Returns the list of available labels we can give to a contact.
      operationId: getContactLabelNamesList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact-labels-names'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/labels/names/{label_id}:
    get:
      tags:
        - Contacts system
      summary: Get specific label name
      description: |
        Returns the specific label of available labels we can give to a contact.
      operationId: getSpecificLabelName
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact-labels-names'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Contacts system
      summary: Update specific label name
      description: |
        Update the specific label of available labels we can give to a contact.
      operationId: updateSpecificLabelName
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: label_updated
                  message:
                    type: string
                    example: Label updated successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to update
        '404':
          description: label_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: label_not_found
                  message:
                    type: string
                    example: Label doesn't exist in current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Contacts system
      summary: Delete specific label name
      description: |
        Delete the specific label of available labels we can give to a contact.
      operationId: deleteSpecificLabelName
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: label_deleted
                  message:
                    type: string
                    example: Label deleted successfully
        '404':
          description: label_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: label_not_found
                  message:
                    type: string
                    example: Label doesn't exist in current account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/contacts/labels/names/new:
    post:
      tags:
        - Contacts system
      summary: New specific label name
      description: |
        Add  specific label for available labels we can give to a contact.
      operationId: addSpecificLabelName
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: label_inserted
                  message:
                    type: string
                    example: Label inserted successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to post
        '401':
          description: label_already_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: label_already_exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/dashboard/stats/all:
    get:
      tags:
        - Dashboard stats
      summary: Get all dashboard stats
      description: |
        Get the whole object with all dashboards stats that been visualized on home-dashboard
      operationId: getAllDashboardStats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: dashboard_stats
                  message:
                    type: string
                    example: New dashboard stats, e-Commerce Bizyhive Control Panel
                  stats:
                    type: object
                    properties:
                      incomes:
                        type: object
                        properties:
                          current_month:
                            type: number
                          last_month:
                            type: number
                          difference:
                            type: object
                            properties:
                              total_sales_reduce_up_or_down:
                                type: number
                              total_sales_reduce_month:
                                type: number
                          month_analysis:
                            january:
                              type: number
                            february:
                              type: number
                            march:
                              type: number
                            april:
                              type: number
                            may:
                              type: number
                            june:
                              type: number
                            july:
                              type: number
                            august:
                              type: number
                            september:
                              type: number
                            october:
                              type: number
                            november:
                              type: number
                            december:
                              type: number
                      orders:
                        type: object
                        properties:
                          current_month:
                            type: number
                          last_month:
                            type: number
                          difference:
                            orders_summary_reduce_up_or_down:
                              type: number
                            orders_summary_reduce_month:
                              type: number
                          monthly_by_status:
                            confirmed_orders:
                              type: number
                            sent_orders:
                              type: number
                            completed_orders:
                              type: number
                            archived_orders:
                              type: number
                            returned_orders:
                              type: number
                          analytics:
                            type: object
                            properties:
                              per_month:
                                type: object
                                properties:
                                  january:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  february:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  march:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  april:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  may:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  june:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  july:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  august:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  september:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  october:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  november:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                                  december:
                                    type: object
                                    properties:
                                      confirmed_orders:
                                        type: number
                                      sent_orders:
                                        type: number
                                      completed_orders:
                                        type: number
                                      archived_orders:
                                        type: number
                                      returned_orders:
                                        type: number
                                      total_orders:
                                        type: number
                              per_status:
                                type: object
                                properties:
                                  total_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
                                  confirmed_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
                                  sent_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
                                  completed_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
                                  archived_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
                                  returned_orders:
                                    type: object
                                    properties:
                                      january:
                                        type: number
                                      february:
                                        type: number
                                      march:
                                        type: number
                                      april:
                                        type: number
                                      may:
                                        type: number
                                      june:
                                        type: number
                                      july:
                                        type: number
                                      august:
                                        type: number
                                      september:
                                        type: number
                                      october:
                                        type: number
                                      november:
                                        type: number
                                      december:
                                        type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/list:
    get:
      tags:
        - Employees system
      summary: Get employees
      description: |
        A list containing the employees of the company in question is returned
      operationId: getEmployeesList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}:
    get:
      tags:
        - Employees system
      summary: Get specific employee
      description: |
        Get specific employee of the company in question is returned
      operationId: getSpecificEmployee
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Employees system
      summary: Update specific employee
      description: |
        Update specific employee of the company in question is returned
      operationId: updateSpecificEmployee
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: employee_basic_data_updated
                  message:
                    type: string
                    example: Employee basic data just updated!
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: nothing_for_update
                  message:
                    type: string
                    example: Nothing to update
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Employees system
      summary: Delete specific employee
      description: |
        Delete specific employee of the company in question is returned
      operationId: deleteSpecificEmployee
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: employee_archived
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: employee_archived
                  message:
                    type: string
                    example: Employee archived
        '400':
          description: wrong_status_to_delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: wrong_status_to_delete
                  message:
                    type: string
                    example: Invalid putted status value
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/l/new:
    post:
      tags:
        - Employees system
      summary: New employee
      description: |
        Create a new employee for a specific company
      operationId: newEmployeeBasicData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: employee_inserted
                  message:
                    type: string
                    example: Employee inserted successfully
                  employee_id:
                    type: string
                    example: new_employee_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: Missing data & cannot save new employee
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/list:
    get:
      tags:
        - Employees system
      summary: Get employee's payments
      description: |
        Get the list of payments of for an employee
      operationId: getEmployeePaymentsList
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-payment-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/{payment_id}:
    get:
      tags:
        - Employees system
      summary: Get specific employee's payment
      description: |
        Get a specific payment for an employee
      operationId: getSpecificEmployeePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee-payment-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Employees system
      summary: Update specific employee's payment
      description: |
        Update a specific payment for an employee
      operationId: updateSpecificEmployeePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  $ref: '#/components/schemas/employee-payment-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK - payment_version_updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: payment_version_updated
                  message:
                    type: string
                    example: Employee payment version updated successfully
        '201':
          description: OK - no_need_to_update
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: no_need_to_update
                  message:
                    type: string
                    example: Payment version doesn't need to be updated
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: payment_version_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: payment_version_not_found
                  message:
                    type: string
                    example: Payment version doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Employees system
      summary: Delete specific employee's payment
      description: |
        Delete a specific payment for an employee
      operationId: deleteSpecificEmployeePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: payment_version_deleted
                  message:
                    type: string
                    example: Payment version deleted and cannot be restored
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: payment_version_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: payment_version_not_found
                  message:
                    type: string
                    example: Payment version doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/l/new:
    post:
      tags:
        - Employees system
      summary: New specific employee's payment
      description: |
        New specific payment for an employee
      operationId: newSpecificEmployeePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  $ref: '#/components/schemas/employee-payment-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: payment_version_inserted
                  message:
                    type: string
                    example: Payment version inserted successfully
                  payment_version_id:
                    type: string
                    example: new_payment_version_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to save new payment version
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/done/list:
    get:
      tags:
        - Employees system
      summary: Get employee's done payments
      description: |
        Get the list of done payments for an employee
      operationId: getEmployeeDonePaymentsList
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-done-payment-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/done/specific-list:
    get:
      tags:
        - Employees system
      summary: Get specific employee's done payments
      description: |
        Get the specific list of done payments for an employee
      operationId: getEmployeeDonePaymentsSpecList
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: rec_id
          in: query
          required: false
          schema:
            type: string
        - name: employee_id
          in: query
          required: true
          schema:
            type: string
        - name: connected_account_id
          in: query
          required: true
          schema:
            type: string
        - name: payment_version_id
          in: query
          required: false
          schema:
            type: string
        - name: payment_date_time
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-done-payment-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/done/m/{payment_id}:
    get:
      tags:
        - Employees system
      summary: Get specific employee's done payment
      description: |
        Get a specific done payment for an employee
      operationId: getSpecificEmployeeDonePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee-done-payment-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Employees system
      summary: Update specific employee's done payment
      description: |
        Update a specific done payment for an employee
      operationId: updateSpecificEmployeeDonePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  $ref: '#/components/schemas/employee-done-payment-schema'
        description: requestBody description
      responses:
        '200':
          description: OK - updated_successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: updated_successfully
                  message:
                    type: string
                    example: Employee done payment successfully updated
        '201':
          description: OK - nothing_to_update
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: nothing_to_update
                  message:
                    type: string
                    example: nothing_to_update
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: payment_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: payment_not_found
                  message:
                    type: string
                    example: payment_not_found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Employees system
      summary: Delete specific employee's done payment
      description: |
        Delete a specific done payment for an employee
      operationId: deleteSpecificEmployeeDonePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: payment_deleted
                  message:
                    type: string
                    example: Payment deleted successfully
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: payment_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: payment_not_found
                  message:
                    type: string
                    example: payment_not_found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/payments/done/new:
    post:
      tags:
        - Employees system
      summary: New specific employee's done payment
      description: |
        New specific done payment for an employee
      operationId: newSpecificEmployeeDonePayment
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  $ref: '#/components/schemas/employee-done-payment-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: payment_done
                  message:
                    type: string
                    example: Payment completed & inserted to the archive
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/work-hours:
    get:
      tags:
        - Employees system
      summary: Get employee's worked hours
      description: |
        Get the list of employee's worked hours
      operationId: getEmployeeWorkedHoursList
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-worked-hour-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/work-hours-specific:
    get:
      tags:
        - Employees system
      summary: Get employee's specific worked hours
      description: |
        Get the specific list of employee's worked hours
      operationId: getEmployeeWorkedHoursSpecList
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: rec_id
          in: query
          required: false
          schema:
            type: string
        - name: connected_account_id
          in: query
          required: true
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee-worked-hour-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/work-hours/{rec_id}:
    get:
      tags:
        - Employees system
      summary: Get employee's specific worked hour
      description: |
        Get a specific work hour for an employee
      operationId: getEmployeeSpecWorkedHour
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: rec_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee-worked-hour-schema'
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Employees system
      summary: Update employee's specific worked hour
      description: |
        Update a specific work hour for an employee
      operationId: updateEmployeeSpecWorkedHour
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: rec_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee-worked-hour-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK - data_updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: data_updated
                  message:
                    type: string
                    example: Data updated successfully
        '201':
          description: OK - nothing_to_update
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: nothing_to_update
                  message:
                    type: string
                    example: Nothing to update - Data is up to date
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: work_hours_version_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: work_hours_version_not_found
                  message:
                    type: string
                    example: Work hours version not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Employees system
      summary: Delete employee's specific worked hour
      description: |
        Delete a specific work hour for an employee
      operationId: deleteEmployeeSpecWorkedHour
      parameters:
        - name: employee_id
          in: path
          required: true
          schema:
            type: string
        - name: rec_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                code:
                  type: number
                  example: 200
                type:
                  type: string
                  example: data_deleted
                message:
                  type: string
                  example: Data deleted successfully
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '405':
          description: work_hours_version_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 405
                  type:
                    type: string
                    example: work_hours_version_not_found
                  message:
                    type: string
                    example: Work hours version not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/work-hours/n/new:
    post:
      tags:
        - Employees system
      summary: Employee new worked hour
      description: |
        Add new worked hour for an employee
      operationId: newEmployeeWorkedHour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee-worked-hour-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: data_inserted
                  message:
                    type: string
                    example: Data for worked hours inserted successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data to save
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/employees/{employee_id}/work-hours/n/new-multiple-days:
    post:
      tags:
        - Employees system
      summary: Employee new worked hours (multiple)
      description: |
        Add new worked hours for an employee
      operationId: newEmployeeWorkedHourMultiple
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/employee-worked-hour-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: data_inserted_successfully
                  message:
                    type: string
                    example: Data for employee worked hours inserted successfully
                  new_records_id:
                    type: array
                    items:
                      type: object
                      properties:
                        date_day:
                          type: string
                          example: 10-12-2024
                        new_record_id:
                          type: string
        '404':
          description: employee_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: employee_not_found
                  message:
                    type: string
                    example: Employee doesn't exist
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/famous/list:
    get:
      tags:
        - Famous products
      summary: Get list
      description: |
        Get the general famous products list
      operationId: getFamousProductsList
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: '''general'' | ''yearly'' | ''monthly'' | ''weekly'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-schema'
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Wrong type value!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/famous/list-category:
    get:
      tags:
        - Famous products
      summary: Get list (by categories)
      description: |
        Get the famous products list (by them categories)
      operationId: getFamousProductsListCategories
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: '''general'' | ''yearly'' | ''monthly'' | ''weekly'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_category_id:
                      type: string
                    product_category_label:
                      type: string
                    products:
                      type: array
                      items:
                        $ref: '#/components/schemas/product-schema'
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Wrong type value!
        '404':
          description: no_categories_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: no_categories_found
                  message:
                    type: string
                    example: No categories found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/newsletter/messages/list:
    get:
      tags:
        - Newsletter system
      summary: Get messages list
      description: |
        Get the list newsletter's messages
      operationId: getNewsletterMessagesList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/newsletter-message-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/manage/newsletter/messages/specific-message:
    get:
      tags:
        - Newsletter system
      summary: Get specific message
      description: |
        Get a specific newsletter message
      operationId: getSpecNewsletterMessage
      parameters:
        - name: message_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsletter-message-schema'
        '404':
          description: message_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: message_not_found
                  message:
                    type: string
                    example: Message that you want to edit, not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Newsletter system
      summary: Update specific message
      description: |
        Update a specific newsletter message
      operationId: updateSpecNewsletterMessage
      parameters:
        - name: message_id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  $ref: '#/components/schemas/newsletter-message-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: message_updated
                  message:
                    type: string
                    example: Email updated successfully and saved to the cloud service
                  action:
                    type: string
                  message_id:
                    type: string
                    example: message_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data from your wrote message
        '401':
          description: undefined_message
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: undefined_message
                  message:
                    type: string
                    example: Undefined message. No message id provided
        '404':
          description: message_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: message_not_found
                  message:
                    type: string
                    example: Message that you want to edit, not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
        '501':
          description: wrong_action
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 501
                  type:
                    type: string
                    example: wrong_action
                  message:
                    type: string
                    example: Wrong action given
    delete:
      tags:
        - Newsletter system
      summary: Delete specific message
      description: |
        Delete a specific newsletter message
      operationId: deleteSpecNewsletterMessage
      parameters:
        - name: message_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: message_deleted
                  message:
                    type: string
                    example: Message deleted successfully
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data from your wrote message
        '404':
          description: message_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: message_not_found
                  message:
                    type: string
                    example: Message that you want to edit, not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    post:
      tags:
        - Newsletter system
      summary: New message
      description: |
        New newsletter message
      operationId: newSpecNewsletterMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  $ref: '#/components/schemas/newsletter-message-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: message_saved
                  message:
                    type: string
                    example: Message saved successfully
                  action:
                    type: '''draft'' | ''sent'' | ''archived'''
                  message_id:
                    type: string
                    example: new_message_id
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing data from your wrote message
        '401':
          description: undefined_message
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: undefined_message
                  message:
                    type: string
                    example: Undefined message. No message id provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
        '501':
          description: wrong_action
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 501
                  type:
                    type: string
                    example: wrong_action
                  message:
                    type: string
                    example: Wrong action given
  /api/ecommerce/store/orders/orders:
    get:
      tags:
        - Orders system
      summary: Get list
      description: |
        Get the list of orders
      operationId: getOrdersList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/specific-orders:
    get:
      tags:
        - Orders system
      summary: Get specific list
      description: |
        Get the specific list of orders
      operationId: getOrdersSpecificList
      parameters:
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: postal_code
          in: query
          required: false
          schema:
            type: string
        - name: city
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: transfer_courier
          in: query
          required: false
          schema:
            type: string
        - name: current_status
          in: query
          required: false
          schema:
            type: '''confirmed'' | ''sent'' | ''completed'' | ''archived'' | ''returned'''
        - name: page
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/summary/count/all:
    get:
      tags:
        - Orders system
      summary: Get orders summary in the current time
      description: |
        Get orders summary in the current time (all statuses)
      operationId: getOrdersSummaryCurrentTime
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: '''all'' | ''general'' | ''yearly'' | ''monthly'' | ''weekly'' | ''range'' | ''day'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  general_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  yearly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  monthly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  weekly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  range_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  day_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
        '201':
          description: OK - no_records_exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: no_records_exist
                  message:
                    type: string
                    example: There aren't records yet. Please try again in some moments
        '400':
          description: wrong_type_for_retrieve
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: wrong_type_for_retrieve
                  message:
                    type: string
                    example: Entered wrong type for retrieve
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/summary/count/specific:
    get:
      tags:
        - Orders system
      summary: Get orders summary in the current time (with type choosement)
      description: |
        Get orders summary in the current time (with type choosement & specific orders status)
      operationId: getOrdersProductSpecificType
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: '''all'' | ''confirmed'' | ''sent'' | ''completed'' | ''archived'' | ''returned'''
        - name: dateRange
          in: query
          required: true
          schema:
            type: '''all'' | ''general'' | ''yearly'' | ''monthly'' | ''weekly'' | ''range'' | ''day'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  all_data:
                    type: object
                    properties:
                      general_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                      yearly_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                      monthly_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                      weekly_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                      range_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                      day_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                  specific_dateRange:
                    type: object
                    properties:
                      dateRange_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                  range_type:
                    type: object
                    properties:
                      dateRange_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
                  day_type:
                    type: object
                    properties:
                      day_type:
                        type: object
                        properties:
                          all_orders:
                            type: number
                          confirmed_orders:
                            type: number
                          sent_orders:
                            type: number
                          completed_orders:
                            type: number
                          archived_orders:
                            type: number
                          returned_orders:
                            type: number
        '400':
          description: missing_date_range
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_date_range
                  message:
                    type: string
                    example: Once you choose the date range option you should parse the startDate and the endDate
        '401':
          description: wrong_type_value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: wrong_type_value
                  message:
                    type: string
                    example: The type that you entered is wrong. See the documentation and try again
        '402':
          description: wrong_status_value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 402
                  type:
                    type: string
                    example: wrong_status_value
                  message:
                    type: string
                    example: The status value that you entered is wrong. See the documentation and try again
        '404':
          description: no_records_exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: no_records_exist
                  message:
                    type: string
                    example: There aren't records yet. Please try again in some moments
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/summary/count/spec-date-range:
    get:
      tags:
        - Orders system
      summary: Get orders summary in specific date range
      description: |
        Get orders summary in specific date range
      operationId: getOrdersProductSpecificTypeDateRange
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: Date
        - name: type
          in: query
          required: true
          schema:
            type: '''all'' | ''general'' | ''yearly'' | ''monthly'' | ''weekly'' | ''range'' | ''day'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  general_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  yearly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  monthly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  weekly_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  range_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
                  day_type:
                    type: object
                    properties:
                      all_orders:
                        type: number
                      confirmed_orders:
                        type: number
                      sent_orders:
                        type: number
                      completed_orders:
                        type: number
                      archived_orders:
                        type: number
                      returned_orders:
                        type: number
        '400':
          description: wrong_type_parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: wrong_type_parameter
                  message:
                    type: string
                    example: You entered wrong value in type parameter. See the documentation and try again
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}:
    get:
      tags:
        - Orders system
      summary: Get specific order
      description: |
        Get a specific order
      operationId: getSpecOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order-schema'
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Orders system
      summary: Update specific order
      description: |
        Update a specific order
      operationId: updateSpecOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: order_updated
                  message:
                    type: string
                    example: Your order has been successfully updated!
        '400':
          description: missing_credentials_to_update_the_order
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_credentials_to_update_the_order
                  message:
                    type: string
                    example: Missing credentials and the order cannot be updated
        '401':
          description: missing_order_products_info
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: missing_order_products_info
                  message:
                    type: string
                    example: Missing products info and cannot be recognized
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/ord/new:
    post:
      tags:
        - Orders system
      summary: New order
      description: |
        Create a new order
      operationId: newOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: order_saved
                  message:
                    type: string
                    example: Your order has been successfully saved!
                  order_identifiers:
                    type: object
                    properties:
                      order_id:
                        type: string
                        example: new_order_id
                      order_number:
                        type: string
                        example: new_order_number
                      invoice_data__invoice_number:
                        type: string
                        example: new_invoice_data__invoice_number
        '400':
          description: missing_credentials_to_update_the_order
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_credentials_to_update_the_order
                  message:
                    type: string
                    example: Missing credentials and the order cannot be updated
        '401':
          description: missing_order_products_info
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: missing_order_products_info
                  message:
                    type: string
                    example: Missing products info and cannot be recognized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/{new_status}:
    put:
      tags:
        - Orders system
      summary: Change order's status
      description: |
        Change order's status
      operationId: updateOrderStatus
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: Date
        - name: new_status
          in: path
          required: true
          schema:
            type: '''confirmed'' | ''sent'' | ''completed'' | ''archived'' | ''returned'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: order_updated_to_confirmed
                  message:
                    type: string
                    example: Order has been successfully updated with status {new_status}
                  updated_datetime:
                    type: Date
                  current_status:
                    type: '''confirmed'' | ''sent'' | ''completed'' | ''archived'' | ''returned'''
                    example:
                      new_status: null
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/notes:
    put:
      tags:
        - Orders system
      summary: Update notes from specific order
      description: |
        Update only the notes from a specific order
      operationId: updateSpecOrderNotes
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: notes_updated
                  message:
                    type: string
                    example: Notes updated successfully
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/order-seen:
    put:
      tags:
        - Orders system
      summary: Update the 'viewed' status from an order
      description: |
        Update the 'viewed' status from an order
      operationId: updateSpecOrderSeenStatus
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: order_seen
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/upload-paper:
    post:
      tags:
        - Orders system
      summary: Upload order's paper
      description: |
        Upload order's paper
      operationId: uploadOrderPaper
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file_to_upload:
                  type: string (binary)
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: file_uploaded
                  message:
                    type: string
                    example: file_uploaded_successfully
                  originalName:
                    type: string
                    example: order-paper.pdf
                  mimetype:
                    type: string
                    example: png
                  destination:
                    type: string
                    example: https://...
                  filename:
                    type: string
                    example: order-paper-renamed.png
                  file_url:
                    type: string
                    example: https://.../order-paper-renamed.png
        '400':
          description: missing_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_data
                  message:
                    type: string
                    example: Missing required data to save the file
        '401':
          description: wrong_type_value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: wrong_type_value
                  message:
                    type: string
                    example: Wrong type value!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/upload-paper/{paper_id}:
    delete:
      tags:
        - Orders system
      summary: Delete order's paper
      description: |
        Delete order's paper
      operationId: deleteOrderPaper
      parameters:
        - name: paper_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: file_deleted
                  message:
                    type: string
                    example: File deleted successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/search/global-search:
    get:
      tags:
        - Orders system
      summary: Search orders
      description: |
        Search orders
      operationId: getOrdersListSearch
      parameters:
        - name: order_id
          in: query
          required: false
          schema:
            type: string
        - name: order_number
          in: query
          required: false
          schema:
            type: string
        - name: first_name
          in: query
          required: false
          schema:
            type: string
        - name: last_name
          in: query
          required: false
          schema:
            type: string
        - name: phone
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/products:
    get:
      tags:
        - Orders system
      summary: Get products from an order
      description: |
        Get products from an order
      operationId: getOrdersProductsList
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order-product-schema'
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/products/{product_id}:
    get:
      tags:
        - Orders system
      summary: Get specific product from an order
      description: |
        Get specific product from an order
      operationId: getOrdersProductSpecific
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order-product-schema'
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/orders/{order_id}/products/{product_id}/{status}:
    put:
      tags:
        - Orders system
      summary: Change status from order's product
      description: |
        Change status from order's product
      operationId: changeOrderProductStatus
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: '''archive'' | ''active'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_status_changed
                  message:
                    type: string
                    example: Product status changed successfully
        '404':
          description: order_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: order_not_found
                  message:
                    type: string
                    example: Order doesn't found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/payments/methods/list/active:
    get:
      tags:
        - Orders system
      summary: Get the list of active payment methods
      description: |
        Get the list of active payment methods
      operationId: getListActivePaymentMethods
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment-type-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/payments/methods/{payment_id}:
    get:
      tags:
        - Orders system
      summary: Get specific payment method
      description: |
        Get specific payment method
      operationId: getSpecificPaymentMethod
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-type-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/products:
    get:
      tags:
        - Products system
      summary: Get list
      description: |
        Get the list of products
      operationId: getProductsList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/specific-products:
    get:
      tags:
        - Products system
      summary: Get specific list
      description: |
        Get a specific list of products
      operationId: getSpecificProductsList
      parameters:
        - name: product_brand
          in: query
          required: false
          schema:
            type: string
        - name: categories_belongs
          in: query
          required: false
          schema:
            type: string
        - name: product_model
          in: query
          required: false
          schema:
            type: string
        - name: supplier
          in: query
          required: false
          schema:
            type: string
        - name: current_status
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product}:
    get:
      tags:
        - Products system
      summary: Get specific product
      description: |
        Get a specific product
      operationId: getSpecificProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product-schema'
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Products system
      summary: Update specific product
      description: |
        Update a specific product
      operationId: updateSpecificProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_updated
                  message:
                    type: string
                    example: Product updated. New version of product just created
                  new_version_id:
                    type: string
                    example: new_version_id
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/new:
    get:
      tags:
        - Products system
      summary: New product
      description: |
        Create a new product
      operationId: createNewProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product-schema'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: successful_adding
                  message:
                    type: string
                    example: Product addition made successfully!
                  product_id:
                    type: string
                    example: new_product_id
                  product_code:
                    type: string
                    example: new_product_code
                  product_version:
                    type: string
                    example: new_product_version
        '400':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Missing data!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product_id}/notes/update:
    put:
      tags:
        - Products system
      summary: Update product's notes
      description: |
        Update product's notes
      operationId: updateProductNotes
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_notes_updated
                  message:
                    type: string
                    example: Product notes updated successfully
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/{product_id}/categories/update:
    put:
      tags:
        - Products system
      summary: Update product's categories
      description: |
        Update product's categories
      operationId: updateProductCategories
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  type: string
                  example: '{"category_id_1": "category_value_1"}'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_categories_updated
                  message:
                    type: string
                    example: Product categories updated successfully
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product_id}/get-shared-product:
    get:
      tags:
        - Products system
      summary: Get shared product
      description: |
        Get a shared product
      operationId: getSharedProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product-schema'
        '400':
          description: product_not_shared
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: product_not_shared
                  message:
                    type: string
                    example: This product is not shared
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product_id}/{status}:
    put:
      tags:
        - Products system
      summary: Update product's status
      description: |
        Update product's status
      operationId: updateProductStatus
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: '''in_stock'' | ''available_1_to_3_days'' | ''available_1_to_10_days'' | ''available_1_to_30_days'' | ''with_order'' | ''unavailable'' | ''temporary_unavailable'' | ''out_of_stock'' | ''ended'' | ''closed'' | ''archived'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: status_updated
                  message:
                    type: string
                    example: Status updated successfully
                  current_status:
                    type: '''in_stock'' | ''available_1_to_3_days'' | ''available_1_to_10_days'' | ''available_1_to_30_days'' | ''with_order'' | ''unavailable'' | ''temporary_unavailable'' | ''out_of_stock'' | ''ended'' | ''closed'' | ''archived'''
                    example: in_stock
        '400':
          description: wrong_status_value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: wrong_status_value
                  message:
                    type: string
                    example: Wrong status value for this product
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product not found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/search/global-search:
    get:
      tags:
        - Products system
      summary: Search products
      description: |
        Search products
      operationId: searchProducts
      parameters:
        - name: product_code
          in: query
          required: false
          schema:
            type: string
        - name: headline
          in: query
          required: false
          schema:
            type: string
        - name: product_brand
          in: query
          required: false
          schema:
            type: string
        - name: product_model
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product_id}/upload-image:
    post:
      tags:
        - Products system
      summary: Upload single product image
      description: |
        Upload single product image
      operationId: updateSingleProductImage
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: main_image
          in: query
          required: true
          schema:
            type: number
          description: The index of the main image for the product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_image:
                  type: string (binary)
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: file_uploaded
                  message:
                    type: string
                    example: file_uploaded_successfully
                  originalName:
                    type: string
                    example: product-image.pdf
                  mimetype:
                    type: string
                    example: png
                  destination:
                    type: string
                    example: https://...
                  filename:
                    type: string
                    example: product-image-renamed.png
                  file_url:
                    type: string
                    example: https://.../product-image-renamed.png
        '201':
          description: OK - no_files_found_to_save
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: no_files_found_to_save
                  message:
                    type: string
                    example: No files found to be saved
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product_id}/upload-multiple-image:
    post:
      tags:
        - Products system
      summary: Upload multiple product image
      description: |
        Upload multiple product image
      operationId: updateMultipleProductImage
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: main_image
          in: query
          required: true
          schema:
            type: number
          description: The index of the main image for the product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: object
                properties:
                  product_image:
                    type: string (binary)
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: images_uploaded
                  message:
                    type: string
                    example: Product images uploaded successfully
        '201':
          description: OK - no_files_found_to_save
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: no_files_found_to_save
                  message:
                    type: string
                    example: No files found to be saved
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/images/delete/{image_id}:
    delete:
      tags:
        - Products system
      summary: Delete product's image
      description: |
        Delete product's image
      operationId: deleteProductImage
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: image_archived
                  message:
                    type: string
                    example: Image archived successfully
        '201':
          description: OK - image_archived_changed_main_image
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: image_archived_changed_main_image
                  message:
                    type: string
                    example: Product image archived successfully! Main image changed!
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/categories/list:
    get:
      tags:
        - Products system
      summary: Get categories list
      description: |
        Get categories list
      operationId: getProductCategoriesList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    pcategory_id:
                      type: string
                    label:
                      type: string
                    connected_account_id:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/c/categories/{pcategory_id}:
    get:
      tags:
        - Products system
      summary: Get specific category
      description: |
        Get specific category
      operationId: getSpecificCategory
      parameters:
        - name: pcategory_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pcategory_id:
                    type: string
                  label:
                    type: string
                  connected_account_id:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    put:
      tags:
        - Products system
      summary: Update specific category
      description: |
        Update specific category
      operationId: updateSpecificCategory
      parameters:
        - name: pcategory_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pcategory_id:
                  type: string
                label:
                  type: string
                connected_account_id:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_category_updated
                  message:
                    type: string
                    example: Product category updated successfully
        '400':
          description: product_category_already_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: product_category_already_exists
                  message:
                    type: string
                    example: This label of product category is already exist
        '404':
          description: product_category_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_category_not_found
                  message:
                    type: string
                    example: Product category not found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
    delete:
      tags:
        - Products system
      summary: Delete specific category
      description: |
        Delete specific category
      operationId: deleteSpecificCategory
      parameters:
        - name: pcategory_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_category_deleted
                  message:
                    type: string
                    example: Product category deleted successfully
        '404':
          description: product_category_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_category_not_found
                  message:
                    type: string
                    example: Product category not found for this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/categories/new:
    post:
      tags:
        - Products system
      summary: New category
      description: |
        Creates new product category
      operationId: newProductCategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pcategory_id:
                  type: string
                label:
                  type: string
                connected_account_id:
                  type: string
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_category_connected
                  message:
                    type: string
                    example: Product category added successfully
        '400':
          description: product_category_already_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: product_category_already_exists
                  message:
                    type: string
                    example: This label of product category is already exist
        '401':
          description: missing_credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: missing_credentials
                  message:
                    type: string
                    example: Missing label value
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product}/product-transactions:
    get:
      tags:
        - Products system
      summary: Get product's transactions
      description: |
        Get product's transactions
      operationId: getProductTransactions
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    rec_id:
                      type: number
                    product_id:
                      type: string
                    connected_account_id:
                      type: string
                    updated_by:
                      type: string
                    product_created_at:
                      type: string | Date;
                    whole_product_update:
                      type: boolean
                    product_update_categories:
                      type: boolean
                    added_category:
                      type: string
                    removed_category:
                      type: string
                    product_update_images:
                      type: boolean
                    field_changed:
                      type: string
                    value_before:
                      type: string
                    value_after:
                      type: string
                    quantity_sold:
                      type: number
                    quantity_added:
                      type: number
                    quantity_removed:
                      type: number
                    warehouse_id:
                      type: string
                    runway_id:
                      type: string
                    column_id:
                      type: string
                    column_shelf_id:
                      type: string
                    purchased_price:
                      type: number
                    status_changed:
                      type: boolean
                    status_before:
                      type: string
                    status_after:
                      type: string
                    created_at:
                      type: string | Date;
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories:
    get:
      tags:
        - Products inventories
      summary: Get list
      description: |
        Get list
      operationId: getProductInventoriesList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-inventory-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories-specific-data:
    get:
      tags:
        - Products inventories
      summary: Get list (basic data)
      description: |
        Get list (only basic data)
      operationId: getProductInventoriesListBasicData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-inventory-basic-data'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories/{inventory_id}:
    get:
      tags:
        - Products inventories
      summary: Get specific inventory
      description: |
        Get specific inventory
      operationId: getSpecificProductInventory
      parameters:
        - name: inventory_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product-inventory-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories/n/new:
    post:
      tags:
        - Products inventories
      summary: New inventory
      description: |
        Creates new inventory
      operationId: newProductInventory
      parameters:
        - name: send_email
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descriptive_title:
                  type: string
        description: requestBody description
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 200
                  type:
                    type: string
                    example: inventory_created
                  message:
                    type: string
                    example: New products inventory created successfully!
                  inventory_data:
                    type: object
                    properties:
                      inventory_id:
                        type: string
                        example: new_inventory_id
                      descriptive_title:
                        type: string
                      inventory_products:
                        type: array
                        items:
                          $ref: '#/components/schemas/product-inventory-product-schema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories/s/settings:
    get:
      tags:
        - Products inventories
      summary: Get inventory settings
      description: |
        Get inventory settings
      operationId: getInventorySettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_generation_timeline:
                    type: object
                    properties:
                      setting_id:
                        type: number
                      connected_account_id:
                        type: string
                      type:
                        type: string
                      value:
                        type: string
                      setting_auto_generate_date__day:
                        type: string
                      setting_auto_generate_date__month:
                        type: string
                      setting_auto_generate_date_frequency:
                        type: '''yearly'' | ''monthly'' | ''weekly'' | ''daily'''
                      setting_auto_generate_date_frequency__day:
                        type: string
                      setting_auto_generate_date_frequency__month:
                        type: string
                      meta:
                        type: any
                  connected_account_id:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/products/inventories/settings/auto-generate-scheduling:
    put:
      tags:
        - Products inventories
      summary: Update setting "Auto generate scheduling"
      description: |
        Update setting "Auto generate scheduling"
      operationId: updateSettingAutoGenerateScheduling
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                setting_data:
                  type: object
                  properties:
                    setting_id:
                      type: number
                    connected_account_id:
                      type: string
                    type:
                      type: string
                    value:
                      type: string
                    setting_auto_generate_date__day:
                      type: string
                    setting_auto_generate_date__month:
                      type: string
                    setting_auto_generate_date_frequency:
                      type: '''yearly'' | ''monthly'' | ''weekly'' | ''daily'''
                    setting_auto_generate_date_frequency__day:
                      type: string
                    setting_auto_generate_date_frequency__month:
                      type: string
                    meta:
                      type: any
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK - setting_inserted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: setting_inserted
                  updated_object:
                    type: object
                    properties:
                      setting_id:
                        type: number
                      connected_account_id:
                        type: string
                      type:
                        type: string
                      value:
                        type: string
                      setting_auto_generate_date__day:
                        type: string
                      setting_auto_generate_date__month:
                        type: string
                      setting_auto_generate_date_frequency:
                        type: '''yearly'' | ''monthly'' | ''weekly'' | ''daily'''
                      setting_auto_generate_date_frequency__day:
                        type: string
                      setting_auto_generate_date_frequency__month:
                        type: string
                      meta:
                        type: any
        '201':
          description: OK - setting_updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: setting_updated
                  updated_object:
                    type: object
                    properties:
                      setting_id:
                        type: number
                      connected_account_id:
                        type: string
                      type:
                        type: string
                      value:
                        type: string
                      setting_auto_generate_date__day:
                        type: string
                      setting_auto_generate_date__month:
                        type: string
                      setting_auto_generate_date_frequency:
                        type: '''yearly'' | ''monthly'' | ''weekly'' | ''daily'''
                      setting_auto_generate_date_frequency__day:
                        type: string
                      setting_auto_generate_date_frequency__month:
                        type: string
                      meta:
                        type: any
        '202':
          description: OK - setting_deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  type:
                    type: string
                    example: setting_deleted
                  message:
                    type: string
                    example: setting deleted successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product}/share-product:
    put:
      tags:
        - Products system
      summary: Share a product
      description: |
        Change the setting and makes a product public
      operationId: shareProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_shared
                  message:
                    type: string
                    example: Product shared successfully
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/ecommerce/store/products/{product}/non-share-product:
    put:
      tags:
        - Products system
      summary: Un-Share a product
      description: |
        Change the setting and makes a product private
      operationId: unShareProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: product_shared
                  message:
                    type: string
                    example: Product shared successfully
        '404':
          description: product_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: product_not_found
                  message:
                    type: string
                    example: Product doesn't exist on this account
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/surl/s/create-new-url:
    post:
      tags:
        - Utilities
      summary: Create short Url
      description: |
        Create short Url
      operationId: createNewShortUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  example: https://example.com
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: new_url_generated
                  message:
                    type: string
                    example: New url generated successfully
                  short_url:
                    type: string
                    example: https://new-url
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /surl/:url_id:
    get:
      tags:
        - Utilities
      summary: Map short Url
      description: |
        Map short Url
      operationId: mapNewShortUrl
      parameters:
        - name: url_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - creates redirect
        '404':
          description: page_not_found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  type:
                    type: string
                    example: page_not_found
                  message:
                    type: string
                    example: Page not found - 404 error
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/stats/total-sales-amount/all-types:
    get:
      tags:
        - Total sales amount
      summary: Get all types
      description: |
        Get all types
      operationId: getAllTypesTotalSalesAmount
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string | Date
            example: '2024-03-28'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  general_amount:
                    type: number
                  yearly_amount:
                    type: number
                  monthly_amount:
                    type: number
                  weekly_amount:
                    type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/stats/total-sales-amount/spec-date-range:
    get:
      tags:
        - Total sales amount
      summary: Get specific type
      description: |
        Get specific type
      operationId: getSpecTypeTotalSalesAmount
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string | Date
            example: '2024-03-28'
        - name: type
          in: query
          required: true
          schema:
            type: '''general'' | ''monthly'' | ''weekly'' | ''daily'''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                code:
                  type: number
                  example: 200
                type:
                  type: string
                  example: amount
                date:
                  type: string | Date
                  example: '2024-03-28'
                amount:
                  type: float
                  example: 0
        '400':
          description: wrong_type_parameter
          content:
            application/json:
              schema:
                code:
                  type: number
                  example: 400
                type:
                  type: string
                  example: wrong_type_parameter
                message:
                  type: string
                  example: You entered wrong value in type parameter. See the documentation and try again
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/users/data/user-data:
    get:
      tags:
        - Profile system
      summary: Get profile's data
      description: |
        Get profile's data
      operationId: getProfileData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  phone:
                    type: string
                  profile_picture_url:
                    type: string
                  created_at:
                    type: string
                  role:
                    type: string
                  is_account:
                    type: boolean
                  connected_account:
                    type: string
                  using_bizyhive_cloud:
                    type: boolean
                  account_type:
                    type: string
                  authentication_2fa__app:
                    type: boolean
                  authentication_2fa__email:
                    type: boolean
                  authentication_2fa__app_secret:
                    type: string
                  company_data:
                    $ref: '#/components/schemas/company-data'
                  privileges:
                    $ref: '#/components/schemas/user-privileges'
  /api/settings/users/profile/picture:
    put:
      tags:
        - Profile system
      summary: Upload profile picture
      description: |
        Upload profile picture
      operationId: uploadProfilePicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string (binary)
        description: Send here using the 'profile_picture' prefix the profile's picture
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: profile_picture_updated
                  message:
                    type: string
                    example: profile_picture_updated
                  originalName:
                    type: string
                    example: profile-picture.png
                  mimetype:
                    type: string
                    example: png
                  destination:
                    type: string
                    example: https://...
                  filename:
                    type: string
                    example: profile-picture-renamed.png
                  file_url:
                    type: string
                    example: https://.../profile-picture-renamed.png
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
  /api/settings/users/profile/update-data:
    put:
      tags:
        - Profile system
      summary: Update profile data
      description: |
        Update profile data
      operationId: updateProfileData
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                email:
                  type: string
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                phone:
                  type: string
                profile_picture_url:
                  type: string
                created_at:
                  type: string
                role:
                  type: string
                is_account:
                  type: boolean
                connected_account:
                  type: string
                using_bizyhive_cloud:
                  type: boolean
                account_type:
                  type: string
                authentication_2fa__app:
                  type: boolean
                authentication_2fa__email:
                  type: boolean
                authentication_2fa__app_secret:
                  type: string
                company_data:
                  $ref: '#/components/schemas/company-data'
                privileges:
                  $ref: '#/components/schemas/user-privileges'
        description: requestBody description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  type:
                    type: string
                    example: user_updated
                  message:
                    type: string
                    example: User data updated successfully
        '400':
          description: missing_users_data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  type:
                    type: string
                    example: missing_users_data
                  message:
                    type: string
                    example: Missing user's critical data
        '401':
          description: username_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 401
                  type:
                    type: string
                    example: username_exists
                  message:
                    type: string
                    example: Username already exists
        '402':
          description: email_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 402
                  type:
                    type: string
                    example: email_exists
                  message:
                    type: string
                    example: E-mail already exists
        '403':
          description: phone_exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 403
                  type:
                    type: string
                    example: phone_exists
                  message:
                    type: string
                    example: Phone already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  type:
                    type: string
                    example: internal_server_error
                  message:
                    type: any
                    example: {}
components:
  schemas:
    login:
      type: object
      title: login_request
      properties:
        username:
          type: string
        password:
          type: string
        remember_me:
          type: boolean
    login-200:
      type: object
      title: login_response
      properties:
        user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        username:
          type: string
        phone:
          type: string
        profile_picture_url:
          type: string
        created_at:
          type: string | Date
        role:
          type: string
        is_account:
          type: boolean
        using_bizyhive_cloud:
          type: boolean
        account_type:
          type: '"account" | "user"'
        authentication_2fa__app:
          type: boolean
        authentication_2fa__email:
          type: boolean
        authentication_2fa__app_secret:
          type: string
        company_data:
          type: object
          properties:
            rec_id:
              type: string
            business_name:
              type: string
            shop_name:
              type: string
            tax_id:
              type: string
            tax_authority:
              type: string
            contact_person__first_name:
              type: string
            contact_person__last_name:
              type: string
            contact_person__middle:
              type: string
            contact_email:
              type: string
            contact_phone:
              type: string
            company_email:
              type: string
            company_phone:
              type: string
            shop_url:
              type: string
            shop_type:
              type: string
            products_categories:
              type: string
            headquarters_address__street:
              type: string
            headquarters_address__city:
              type: string
            headquarters_address__postal_code:
              type: string
            headquarters_address__state:
              type: string
            headquarters_address__country:
              type: string
            headquarters_latitude:
              type: number
            headquarters_longitude:
              type: number
            operating_hours__monday_start:
              type: string
            operating_hours__monday_end:
              type: string
            operating_hours__monday_close:
              type: boolean
            operating_hours__tuesday_start:
              type: string
            operating_hours__tuesday_end:
              type: string
            operating_hours__tuesday_close:
              type: boolean
            operating_hours__wednesday_start:
              type: string
            operating_hours__wednesday_end:
              type: string
            operating_hours__wednesday_close:
              type: boolean
            operating_hours__thursday_start:
              type: string
            operating_hours__thursday_end:
              type: string
            operating_hours__thursday_close:
              type: boolean
            operating_hours__friday_start:
              type: string
            operating_hours__friday_end:
              type: string
            operating_hours__friday_close:
              type: boolean
            operating_hours__saturday_start:
              type: string
            operating_hours__saturday_end:
              type: string
            operating_hours__saturday_close:
              type: boolean
            operating_hours__sunday_start:
              type: string
            operating_hours__sunday_end:
              type: string
            operating_hours__sunday_close:
              type: boolean
            facebook_url:
              type: string
            instagram_url:
              type: string
            twitter_url:
              type: string
            linkedIn_url:
              type: string
            youtube_url:
              type: string
            whatsapp_url:
              type: string
            tiktok_url:
              type: string
            google_business_url:
              type: string
            shop_google_rate_url:
              type: string
            company_description:
              type: string
            shop_logo:
              type: string
            connected_account_id:
              type: string
            coin_symbol:
              type: string
            coin_label:
              type: string
            coin_description:
              type: string
            coin_correspondence_in_eur:
              type: number
            coin_value:
              type: string
            fee_percent:
              type: number
            slug:
              type: string
        privileges:
          type: array
          items:
            type: object
            properties:
              rec_id:
                type: number
              privilege_type:
                type: string
              value:
                type: boolean
              user_id:
                type: string
              connected_account_id:
                type: string
    login-201:
      type: object
      title: login_response
      properties:
        session:
          type: object
        user:
          type: object
          properties:
            user_id:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
            username:
              type: string
            phone:
              type: string
            profile_picture_url:
              type: string
            created_at:
              type: string | Date
            role:
              type: string
            is_account:
              type: boolean
            using_bizyhive_cloud:
              type: boolean
            account_type:
              type: '"account" | "user"'
            authentication_2fa__app:
              type: boolean
            authentication_2fa__email:
              type: boolean
            authentication_2fa__app_secret:
              type: string
            company_data:
              type: object
              properties:
                rec_id:
                  type: string
                business_name:
                  type: string
                shop_name:
                  type: string
                tax_id:
                  type: string
                tax_authority:
                  type: string
                contact_person__first_name:
                  type: string
                contact_person__last_name:
                  type: string
                contact_person__middle:
                  type: string
                contact_email:
                  type: string
                contact_phone:
                  type: string
                company_email:
                  type: string
                company_phone:
                  type: string
                shop_url:
                  type: string
                shop_type:
                  type: string
                products_categories:
                  type: string
                headquarters_address__street:
                  type: string
                headquarters_address__city:
                  type: string
                headquarters_address__postal_code:
                  type: string
                headquarters_address__state:
                  type: string
                headquarters_address__country:
                  type: string
                headquarters_latitude:
                  type: number
                headquarters_longitude:
                  type: number
                operating_hours__monday_start:
                  type: string
                operating_hours__monday_end:
                  type: string
                operating_hours__monday_close:
                  type: boolean
                operating_hours__tuesday_start:
                  type: string
                operating_hours__tuesday_end:
                  type: string
                operating_hours__tuesday_close:
                  type: boolean
                operating_hours__wednesday_start:
                  type: string
                operating_hours__wednesday_end:
                  type: string
                operating_hours__wednesday_close:
                  type: boolean
                operating_hours__thursday_start:
                  type: string
                operating_hours__thursday_end:
                  type: string
                operating_hours__thursday_close:
                  type: boolean
                operating_hours__friday_start:
                  type: string
                operating_hours__friday_end:
                  type: string
                operating_hours__friday_close:
                  type: boolean
                operating_hours__saturday_start:
                  type: string
                operating_hours__saturday_end:
                  type: string
                operating_hours__saturday_close:
                  type: boolean
                operating_hours__sunday_start:
                  type: string
                operating_hours__sunday_end:
                  type: string
                operating_hours__sunday_close:
                  type: boolean
                facebook_url:
                  type: string
                instagram_url:
                  type: string
                twitter_url:
                  type: string
                linkedIn_url:
                  type: string
                youtube_url:
                  type: string
                whatsapp_url:
                  type: string
                tiktok_url:
                  type: string
                google_business_url:
                  type: string
                shop_google_rate_url:
                  type: string
                company_description:
                  type: string
                shop_logo:
                  type: string
                connected_account_id:
                  type: string
                coin_symbol:
                  type: string
                coin_label:
                  type: string
                coin_description:
                  type: string
                coin_correspondence_in_eur:
                  type: number
                coin_value:
                  type: string
                fee_percent:
                  type: number
                slug:
                  type: string
            privileges:
              type: array
              items:
                type: object
                properties:
                  rec_id:
                    type: number
                  privilege_type:
                    type: string
                  value:
                    type: boolean
                  user_id:
                    type: string
                  connected_account_id:
                    type: string
    register:
      type: object
      title: register_request
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        confirm_password:
          type: string
        phone:
          type: string
        company_name:
          type: string
        is_account:
          type: boolean
        role:
          type: string
        using_bizyhive_cloud:
          type: boolean
    company-data:
      type: object
      title: company_data
      properties:
        rec_id:
          type: string
        business_name:
          type: string
        shop_name:
          type: string
        tax_id:
          type: string
        tax_authority:
          type: string
        contact_person__first_name:
          type: string
        contact_person__last_name:
          type: string
        contact_person__middle:
          type: string
        contact_email:
          type: string
        contact_phone:
          type: string
        company_email:
          type: string
        company_phone:
          type: string
        shop_url:
          type: string
        shop_type:
          type: string
        products_categories:
          type: string
        headquarters_address__street:
          type: string
        headquarters_address__city:
          type: string
        headquarters_address__postal_code:
          type: string
        headquarters_address__state:
          type: string
        headquarters_address__country:
          type: string
        headquarters_latitude:
          type: number
        headquarters_longitude:
          type: number
        operating_hours__monday_start:
          type: string
        operating_hours__monday_end:
          type: string
        operating_hours__monday_close:
          type: boolean
        operating_hours__tuesday_start:
          type: string
        operating_hours__tuesday_end:
          type: string
        operating_hours__tuesday_close:
          type: boolean
        operating_hours__wednesday_start:
          type: string
        operating_hours__wednesday_end:
          type: string
        operating_hours__wednesday_close:
          type: boolean
        operating_hours__thursday_start:
          type: string
        operating_hours__thursday_end:
          type: string
        operating_hours__thursday_close:
          type: boolean
        operating_hours__friday_start:
          type: string
        operating_hours__friday_end:
          type: string
        operating_hours__friday_close:
          type: boolean
        operating_hours__saturday_start:
          type: string
        operating_hours__saturday_end:
          type: string
        operating_hours__saturday_close:
          type: boolean
        operating_hours__sunday_start:
          type: string
        operating_hours__sunday_end:
          type: string
        operating_hours__sunday_close:
          type: boolean
        facebook_url:
          type: string
        instagram_url:
          type: string
        twitter_url:
          type: string
        linkedIn_url:
          type: string
        youtube_url:
          type: string
        whatsapp_url:
          type: string
        tiktok_url:
          type: string
        google_business_url:
          type: string
        shop_google_rate_url:
          type: string
        company_description:
          type: string
        shop_logo:
          type: string
        connected_account_id:
          type: string
        coin_symbol:
          type: string
        coin_label:
          type: string
        coin_description:
          type: string
        coin_correspondence_in_eur:
          type: number
        coin_value:
          type: string
        fee_percent:
          type: number
        slug:
          type: string
    email-integration:
      type: object
      properties:
        email_id:
          type: string
        connected_account_id:
          type: string
        email_label:
          type: string
        host:
          type: string
        port:
          type: string
        secure:
          type: boolean
        user:
          type: string
        password:
          type: string
        default_name:
          type: string
        default_email:
          type: string
    warehouses:
      type: object
      title: warehouses_analytical_details
      properties:
        warehouse_id:
          type: string
        connected_account_id:
          type: string
        distinctive_title:
          type: string
        code_name:
          type: string
        ownership_type:
          type: string
        square_meters:
          type: number
        power_type:
          type: string
        warehouse_license_number:
          type: string
        building_permit_number:
          type: string
        building_year:
          type: string
        reception_exist:
          type: boolean
        parking_spaces:
          type: number
        unloading_vehicles_places_number:
          type: number
        energy_class:
          type: string
        bathrooms_number:
          type: number
        offices_number:
          type: number
        plot__street:
          type: string
        plot__postal_code:
          type: string
        plot__country:
          type: string
        plot__city:
          type: string
        plot__state:
          type: string
        plot__latitude:
          type: number
        plot__longitude:
          type: number
        contact__street:
          type: string
        contact__postal_code:
          type: string
        contact__country:
          type: string
        contact__city:
          type: string
        contact__state:
          type: string
        contact__latitude:
          type: number
        contact__longitude:
          type: number
        contact__phone:
          type: string
        warehouse_manager__fullname:
          type: string
        warehouse_manager__company_position:
          type: string
        warehouse_manager__date_of_birth:
          type: string
        warehouse_manager__social_security_number:
          type: string
        warehouse_manager__personal_tax_id:
          type: string
        warehouse_manager__phone:
          type: string
        warehouse_manager__phone2:
          type: string
        warehouse_manager__company_email:
          type: string
        warehouse_manager__personal_email:
          type: string
        runways:
          type: array
          items:
            type: object
            properties:
              runway_id:
                type: string
              connected_account_id:
                type: string
              warehouse_id:
                type: string
              runway_name:
                type: string
              runway_code:
                type: string
              columns:
                type: array
                items:
                  type: object
                  properties:
                    column_id:
                      type: string
                    connected_account_id:
                      type: string
                    warehouse_id:
                      type: string
                    runway_id:
                      type: string
                    column_name:
                      type: string
                    column_code:
                      type: string
                    shelf:
                      type: array
                      items:
                        type: object
                        properties:
                          shelf_id:
                            type: string
                          connected_account_id:
                            type: string
                          warehouse_id:
                            type: string
                          runway_id:
                            type: string
                          column_id:
                            type: string
                          shelf_code:
                            type: string
    contact-labels-schema:
      type: object
      title: contact_labels_schema
      properties:
        rec_id:
          type: string
        label_id:
          type: string
        label:
          type: string
        connected_account_id:
          type: string
        contact_id:
          type: string
    contact-addresses-schema:
      type: object
      title: contact_address_schema
      properties:
        rec_id:
          type: string
        country:
          type: string
        address:
          type: string
        address_line_2:
          type: string
        postal_code:
          type: string
        city:
          type: string
        postal_vault:
          type: string
        connected_account_id:
          type: string
        contact_id:
          type: string
    contact-custom-fields-schema:
      type: object
      title: contact-custom-field-schema
      properties:
        rec_id:
          type: string
        label:
          type: string
        value:
          type: string
        connected_account_id:
          type: string
        contact_id:
          type: string
    contact-emails-schema:
      type: object
      title: contact_email_schema
      properties:
        rec_id:
          type: string
        label:
          type: string
        value:
          type: string
        connected_account_id:
          type: string
        contact_id:
          type: string
    contact-phones-schema:
      type: object
      title: contact_phone_schema
      properties:
        rec_id:
          type: string
        label:
          type: string
        phone:
          type: string
        connected_account_id:
          type: string
        contact_id:
          type: string
    contact-schema:
      type: object
      title: contact_schema
      properties:
        contact_id:
          type: string
        connected_account_id:
          type: string
        image_url:
          type: string
        prefix:
          type: string
        name:
          type: string
        father_name:
          type: string
        surname:
          type: string
        suffix:
          type: string
        mother_name:
          type: string
        name_in_speaking_format:
          type: string
        father_name_in_speaking_format:
          type: string
        alias:
          type: string
        archive_as:
          type: string
        company:
          type: string
        work_position_title:
          type: string
        work_department:
          type: string
        date_of_birth:
          type: string | Date
        website:
          type: string
        notes:
          type: string
        private:
          type: boolean
        private_user_id:
          type: string
        favorite:
          type: boolean
        contact_labels:
          type: array
          items:
            $ref: '#/components/schemas/contact-labels-schema'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/contact-addresses-schema'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/contact-custom-fields-schema'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/contact-emails-schema'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/contact-phones-schema'
    contact-labels-names:
      type: object
      title: contact_labels_names_schema
      properties:
        label_id:
          type: string
        label:
          type: string
        connected_account_id:
          type: string
    employee-done-payment-schema:
      type: object
      title: employee_done_payment_schema
      properties:
        rec_id:
          type: string
        employee_id:
          type: string
        connected_account_id:
          type: string
        payment_version_id:
          type: string
        payment_date_time:
          type: string | Date
        status:
          type: done
    employee-payment-schema:
      type: object
      title: employee_payment_schema
      properties:
        rec_id:
          type: string
        employee_id:
          type: string
        connected_account_id:
          type: string
        version_label:
          type: string
        hourly_payment:
          type: string
        payment_frequency:
          type: string
        hours_per_day:
          type: string
        initial_payment_date:
          type: string | Date
        active:
          type: boolean
    employee-worked-hour-schema:
      type: object
      title: employee_worked_hour_schema
      properties:
        rec_id:
          type: string
        employee_id:
          type: string
        connected_account_id:
          type: string
        date_day:
          type: string | Date
        start_time:
          type: string | Date
        end_time:
          type: string | Date
        status:
          type: '''confirmed'' | ''done'' | ''declined'' | ''deleted'''
    employee-schema:
      type: object
      title: employee_data
      properties:
        employee_id:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        fathers_name:
          type: string
        mothers_name:
          type: string
        mother_last_name:
          type: string
        tax_id:
          type: string
        social_security_number_amka:
          type: string
        date_of_birth:
          type: string | Date
        date_of_birth_epoch: number;
        company:
          type: string
        position:
          type: string
        phone_number:
          type: string
        work_phone_number:
          type: string
        home_phone_number:
          type: string
        other_phone_number:
          type: string
        email:
          type: string
        work_email:
          type: string
        other_email:
          type: string
        address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        notes:
          type: string
        facebook_url:
          type: string
        instagram_url:
          type: string
        linkedin_url:
          type: string
        messenger_url:
          type: string
        whatsup_url:
          type: string
        telegram_url:
          type: string
        viber_url:
          type: string
        status:
          type: '''active_full_time'' | ''active_part_time'' | ''inactive'' | ''on_leave_paid'' | ''on_leave_unpaid'' | ''fired'' | ''resigned'''
        start_at:
          type: string | Date
        end_at:
          type: string | Date
        created_at:
          type: string | Date
        connected_account_id:
          type: string
        employee_done_payments:
          $ref: '#/components/schemas/employee-done-payment-schema'
        employee_payments:
          $ref: '#/components/schemas/employee-payment-schema'
        employee_worked_hours:
          $ref: '#/components/schemas/employee-worked-hour-schema'
    product-specification-fields-schema:
      type: object
      title: product_specification_field_schema
      properties:
        id:
          type: string
        specification_field_name:
          type: string
        specification_field_value:
          type: string
        specification_category_id:
          type: string
        product_id:
          type: string
        connected_account_id:
          type: string
        product_version:
          type: string
    product-specification-schema:
      type: object
      title: product_specification_schema
      properties:
        id:
          type: string
        category_name:
          type: string
        product_id:
          type: string
        connected_account_id:
          type: string
        product_version:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/product-specification-fields-schema'
    product-image-schema:
      type: object
      title: product_image_schema
      properties:
        id:
          type: string
        url:
          type: string
        main_image:
          type: boolean
        product_id:
          type: string
        archived:
          type: boolean
        created_at:
          type: string | Date
        connected_account_id:
          type: string
        product_version:
          type: string
    product-stock-schema:
      type: object
      title: product_stock_schema
      properties:
        rec_id:
          type: string
        product_id:
          type: string
        connected_account_id:
          type: string
        warehouse_id:
          type: string
        runway_id:
          type: string
        column_id:
          type: string
        column_shelf_id:
          type: string
        stock_quantity:
          type: number
    product-schema:
      type: object
      title: product_schema
      properties:
        product_id:
          type: string
        headline:
          type: string
        product_brand:
          type: string
        categories_belongs:
          type: any
          example: '{"category_id_1": "category_value_1"}'
        product_code:
          type: string
        product_model:
          type: string
        stock:
          type: number
        supplied_price:
          type: number
        clear_price:
          type: number
        fee_percent:
          type: number
        fees:
          type: number
        discount_percent:
          type: number
        discount:
          type: number
        specification:
          type: array
          items:
            $ref: '#/components/schemas/product-specification-schema'
        product_description:
          type: string
        supplier:
          type: string
        current_status:
          type: '''in_stock'' | ''available_1_to_3_days'' | ''available_1_to_10_days'' | ''available_1_to_30_days'' | ''with_order'' | ''unavailable'' | ''temporary_unavailable'' | ''out_of_stock'' | ''ended'' | ''closed'''
          example: in_stock
        archived:
          type: boolean
        notes:
          type: string
        connected_account_id:
          type: string
        created_at_epoch:
          type: number
        created_at:
          type: string | Date
        current_version:
          type: string
        product_shared:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/product-image-schema'
        product_stock:
          type: array
          items:
            $ref: '#/components/schemas/product-stock-schema'
    newsletter-message-email-schema:
      type: object
      title: newsletter_message_email_schema
      properties:
        rec_id:
          type: string
        connected_account_id:
          type: string
        message_id:
          type: string
        email_id:
          type: string
        email:
          type: string
    newsletter-message-schema:
      type: object
      title: newsletter_message_schema
      properties:
        message_id:
          type: string
        connected_account_id:
          type: string
        subject:
          type: string
        message:
          type: string
        status:
          type: '''draft'' | ''sent'' | ''archived'''
          example: draft
        created_at:
          type: string | Date
        last_update_date:
          type: string | Date
        sent_at:
          type: string | Date
        emails:
          type: array
          items:
            $ref: '#/components/schemas/newsletter-message-email-schema'
    transfer-company-schema:
      type: object
      title: transfer_company_schema
      properties:
        rec_id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string
        banner_url:
          type: string
        main_url:
          type: string
        tracking_basic_url:
          type: string
        integrated:
          type: boolean;
    payment-type-schema:
      type: object
      title: null
      properties:
        rec_id:
          type: string
        label:
          type: string
        description:
          type: string
        service:
          type: string
        active:
          type: boolean
        archived:
          type: boolean
    order-product-schema:
      type: object
      title: order_product_schema
      properties:
        rec_id:
          type: string
        product_id:
          type: string
        order_id:
          type: string
        connected_account_id:
          type: string
        active:
          type: boolean
        archived:
          type: boolean
        quantity:
          type: number
        supplied_customer_price:
          type: number
        discount:
          type: number
        discount_percent:
          type: number
        fees:
          type: number
        fee_percent:
          type: number
        status:
          type: '''static'' | ''new'' | ''updated'' | ''deleted'''
        main_image:
          $ref: '#/components/schemas/product-image-schema'
        product_details:
          $ref: '#/components/schemas/product-schema'
    order-schema:
      type: object
      title: order_schema
      properties:
        order_id:
          type: string
        proof:
          type: '''receipt'' | ''invoice'''
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country:
          type: string
        phone:
          type: string
        cell_phone:
          type: string
        confirm_date:
          type: string | Date
        sent_date:
          type: string | Date
        completed_date:
          type: string | Date
        archived_date:
          type: string | Date
        returned_date:
          type: string | Date
        confirmed:
          type: boolean
        sent:
          type: boolean
        completed:
          type: boolean
        transfer_courier:
          type: string
        transfer_courier_details:
          $ref: '#/components/schemas/transfer-company-schema'
        current_status:
          type: '''confirmed'' | ''sent'' | ''completed'' | ''archived'' | ''returned'''
        invoice_data__first_name:
          type: string
        invoice_data__last_name:
          type: string
        invoice_data__company:
          type: string
        invoice_data__tax_number:
          type: string
        invoice_data__doy:
          type: string
        invoice_data__address:
          type: string
        invoice_data__postal_code:
          type: string
        invoice_data__city:
          type: string
        invoice_data__country:
          type: string
        invoice_data__phone:
          type: string
        invoice_data__cell_phone:
          type: string
        invoice_data__is_valid:
          type: boolean
        payment_type:
          type: string
        payment_type_details:
          $ref: '#/components/schemas/payment-type-schema'
        connected_account_id:
          type: string
        order_number:
          type: string
        order_number_formatted:
          type: any
        invoice_data__invoice_number:
          type: string
        archived:
          type: string
        clear_value:
          type: number
        transportation:
          type: number
        cash_on_delivery_payment:
          type: boolean
        cash_on_delivery:
          type: number
        extra_fees:
          type: boolean
        extra_fees_costs:
          type: number
        fees:
          type: number
        fee_percent:
          type: number
        order_total:
          type: number
        tracking_number:
          type: string
        tracking_url:
          type: string
        notes:
          type: string
        order_seen:
          type: boolean
        company_data:
          $ref: '#/components/schemas/company-data'
        order_products:
          type: array
          items:
            $ref: '#/components/schemas/order-product-schema'
    product-inventory-product-shelf-schema:
      type: object
      title: product_inventory_product_shelf_schema
      properties:
        rec_id:
          type: string
        inventory_id:
          type: string
        connected_account_id:
          type: string
        rec_product_id:
          type: string
        rec_warehouse_id:
          type: string
        rec_runway_id:
          type: string
        rec_column_id:
          type: string
        shelf_id:
          type: string
        shelf_code:
          type: string
        shelf_total_stock:
          type: number
    product-inventory-product-column-schema:
      type: object
      title: product_inventory_product_column_schema
      properties:
        rec_id:
          type: string
        inventory_id:
          type: string
        connected_account_id:
          type: string
        rec_product_id:
          type: string
        rec_warehouse_id:
          type: string
        rec_runway_id:
          type: string
        column_id:
          type: string
        column_name:
          type: string
        column_code:
          type: string
        column_total_stock:
          type: number
        shelf:
          type: array
          items:
            $ref: '#/components/schemas/product-inventory-product-shelf-schema'
    product-inventory-product-runway-schema:
      type: object
      title: product_inventory_product_runway_schema
      properties:
        rec_id:
          type: string
        inventory_id:
          type: string
        connected_account_id:
          type: string
        rec_product_id:
          type: string
        rec_warehouse_id:
          type: string
        runway_id:
          type: string
        runway_name:
          type: string
        runway_code:
          type: string
        runway_total_stock:
          type: number
        columns:
          type: array
          items:
            $ref: '#/components/schemas/product-inventory-product-column-schema'
    product-inventory-product-warehouse-schema:
      type: object
      title: product_inventory_product_warehouse_schema
      properties:
        rec_id:
          type: string
        inventory_id:
          type: string
        connected_account_id:
          type: string
        rec_product_id:
          type: string
        warehouse_id:
          type: string
        warehouse_distinctive_title:
          type: string
        warehouse_code_name:
          type: string
        warehouse_total_stock:
          type: number
        runways:
          type: array
          items:
            $ref: '#/components/schemas/product-inventory-product-runway-schema'
    product-inventory-product-schema:
      type: object
      title: product_inventory_product_schema
      properties:
        rec_product_id:
          type: string
        inventory_id:
          type: string
        connected_account_id:
          type: string
        product_id:
          type: string
        product_headline:
          type: string
        product_brand:
          type: string
        product_model:
          type: string
        product_code:
          type: string
        inventory_product_stock:
          type: number
        warehouses:
          type: array
          items:
            $ref: '#/components/schemas/product-inventory-product-warehouse-schema'
    product-inventory-schema:
      type: object
      title: product_inventory_schema
      properties:
        inventory_id:
          type: string
        connected_account_id:
          type: string
        descriptive_title:
          type: string
        created_at:
          type: string | Date
        created_by__user_id:
          type: string
        created_by__first_name:
          type: string
        created_by__last_name:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/product-inventory-product-schema'
    product-inventory-basic-data:
      type: object
      title: product_inventory_basic_data
      properties:
        inventory_id:
          type: string
        connected_account_id:
          type: string
        descriptive_title:
          type: string
        created_at:
          type: string | Date
        created_by__user_id:
          type: string
        created_by__first_name:
          type: string
        created_by__last_name:
          type: string
    user-privileges:
      type: array
      title: user_privileges
      items:
        type: object
        properties:
          rec_id:
            type: number
          privilege_type:
            type: string
          value:
            type: boolean
          user_id:
            type: string
          connected_account_id:
            type: string
